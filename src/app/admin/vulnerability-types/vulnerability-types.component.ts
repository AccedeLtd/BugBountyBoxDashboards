import { Component, OnInit } from '@angular/core';
import { MatDialog } from '@angular/material/dialog';
import { OidcSecurityService } from 'angular-auth-oidc-client';
import { AdminService } from 'src/app/core/_services/admin.services';
import { AlertService } from 'src/app/core/_services/alert.service';
import { NotificationService } from 'src/app/core/_services/notification.service';
import { UpdateVulnerabilityComponent } from '../vulnerabilities/update-vulnerability/update-vulnerability.component';
import { UpdateVulnerabilityTypeDialogComponent } from './update-vulnerability-type-dialog/update-vulnerability-type-dialog.component';
import { VulnerabilityTypeDialogComponent } from './vulnerability-type-dialog/vulnerability-type-dialog.component';

@Component({
  selector: 'app-vulnerability-types',
  templateUrl: './vulnerability-types.component.html',
  styleUrls: ['./vulnerability-types.component.css'],
})
export class VulnerabilityTypesComponent implements OnInit {
  sideNavOpened = false;
  user: any;
  authUser: any;
  userName: any;
  loadingVulnerabilityTypes: boolean = true;
  filteredString: string = '';
  totalCount?: number;
  pageSize: number = 5;
  page: number = 1;
  vulnerabilityTypes: any;

  constructor(
    public oidcSecurityService: OidcSecurityService,
    public alertService: AlertService,
    public notifyService: NotificationService,
    private adminService: AdminService,
    public dialog: MatDialog
  ) {}

  ngOnInit(): void {
    this.loadData();
  }

  loadData() {
    this.getVulnerabilityTypes();
  }

  getVulnerabilityTypes() {
    this.loadingVulnerabilityTypes = true;
    this.adminService.getVulnerabilityTypes().subscribe({
      next: (result) => {
        this.vulnerabilityTypes = result.data;
        this.loadingVulnerabilityTypes = false;
      },
      error: () => {
        this.notifyService.showError(
          'Something went wrong, please try again',
          'Error'
        );
        this.loadingVulnerabilityTypes = false;
      },
    });
  }

  addVulnerabilityType() {
    let dialogRef = this.dialog.open(VulnerabilityTypeDialogComponent, {
      height: '550px',
      width: '600px',
    });

    dialogRef.afterClosed().subscribe((res) => {
      if (res?.data?.name) {
        this.vulnerabilityTypes.push(res.data);
      }
    });
  }

  updateVulnerabilityType(id: number) {
    let dialogRef = this.dialog.open(UpdateVulnerabilityTypeDialogComponent, {
      data:id,
      height: '500px',
      width: '600px',
    });
    dialogRef.afterClosed().subscribe(res => {
      if (res?.data?.name) this.loadData();
    })
  }

  deleteVulnerabilityType(id: number) {
    this.alertService.confirm().then((result) => {
      if(result.isConfirmed) {
        this.adminService.deleteVulnerabilityType(id).subscribe(
          results => {
            if (results.success) {
              this.notifyService.showSuccess('Updated successfully', 'Congratulations');
              this.loadData();
            }
            if (!results.success) {
              this.notifyService.showError('Something went wrong. Please try again', 'Sorry');
            }
          }
        )
      }
    })
  }

  toggleSideNav() {
    this.sideNavOpened = !this.sideNavOpened;
  }

  logout() {
    this.oidcSecurityService.logoff();
  }
}
