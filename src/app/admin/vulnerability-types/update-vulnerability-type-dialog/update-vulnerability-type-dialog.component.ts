import { Component, Inject, OnInit } from '@angular/core';
import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';
import { MatSnackBar } from '@angular/material/snack-bar';
import { AdminService } from 'src/app/core/_services/admin.services';
import { NotificationService } from 'src/app/core/_services/notification.service';

@Component({
  selector: 'app-update-vulnerability-type-dialog',
  templateUrl: './update-vulnerability-type-dialog.component.html',
  styleUrls: ['./update-vulnerability-type-dialog.component.css']
})
export class UpdateVulnerabilityTypeDialogComponent implements OnInit {

  vulnerability = {
    name: "",
    vulnerabilityTypeId: undefined,
    type: ""
  };
  vulnerabilityTypes: any;
  loadingVulnerabilityTypes: boolean = true;

  constructor(
    @Inject(MAT_DIALOG_DATA) public data: number,
    private adminService:AdminService,
    private dialogRef: MatDialogRef<UpdateVulnerabilityTypeDialogComponent>,
    private notifyService:NotificationService,
    private snackBar: MatSnackBar,
  ) { }

  ngOnInit(): void {
    this.getVulnerabilityType(); 
  }

  getVulnerabilityType() {
    this.adminService.getVulnerabilityType(this.data).subscribe(
      results => {
        this.vulnerability.name = results.result.name;
        this.vulnerability.vulnerabilityTypeId = results.result.vulnerabilityTypeId;
        this.vulnerability.type = results.result.type;
      }
    )
  }

  update() {
    if (!this.vulnerability.name) {
      this.snackBar.open('Please enter vulnerability type');
    }
    else {
      const dto = {
        id: this.data,
        name: this.vulnerability.name,
      }
      this.adminService.updateVulnerabilityTypes(dto).subscribe({
        next: results => {
          this.notifyService.showSuccess('Updated successfully', 'Congratulations');
          this.dialogRef.close({ data: results.result })
        },
        error: () => {
          this.notifyService.showError('Something went wrong. Please try again', 'Sorry');
        }
      })
    }
  }

}
